plugins {
    id 'java-library'
    id 'antlr'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.5.21'
}

sourceSets.main.java.srcDirs 'src/main/gen'

group 'lclang'
version '0.1'

repositories {
    mavenCentral()
}

dependencies {
    antlr 'org.antlr:antlr4:4.9.2'
    implementation 'commons-cli:commons-cli:1.4'
    implementation 'com.github.albfernandez:juniversalchardet:2.4.0'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib:1.5.21'

    testImplementation(platform('org.junit:junit-bom:5.7.2'))
    testImplementation('org.junit.jupiter:junit-jupiter')
}

jar {
    manifest.attributes "Main-Class": "lclang.MainKt"

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

test {
    useJUnitPlatform()
    testLogging {
        outputs.upToDateWhen {false}
        showStandardStreams = true
        showExceptions = true
        showCauses = true
    }
}